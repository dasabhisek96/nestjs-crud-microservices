/*
 * @Author: LQ
 * @Date: 2020-06-25 11:54:18
 * @LastEditors: LQ
 * @LastEditTime: 2020-06-25 12:41:42
 * @FilePath: \utils\src\http-client.ts
 */

export class HttpJsonClient {
    auth_faild: any;
    private token: string = ""
    private get_options: RequestInit = {
        method: 'GET',
        headers: {
            'content-type': 'application/json; charset=utf-8',
            'Accept': 'application/json',
            'X-Requested-With': 'Fetch'
        },
        credentials: 'include' // include, *same-origin, omit
    }
    static _instance: HttpJsonClient;
    http_get(url): Promise<any> {
        if (this.token.length > 0) {
            this.get_options.headers["X-Auth-Token"] = this.token;
        }
        return fetch(url, this.get_options).then(
            (response: Response) => {
                if (response.ok) {
                    // console.log("HTTP GET SUCCESS:")
                    return response.json().then(
                        (res) => {
                            return res;
                        }
                    ).catch(() => {
                        Promise.resolve(null)
                    })
                } else if (response.status == 401) {
                    if (this.auth_faild) {
                        this.auth_faild(url)
                    }
                    Promise.reject(403)
                } else if (response.status == 200) {
                    console.log("正确返回");

                    Promise.resolve(null)
                } else {
                    Promise.reject("服务器错误：" + response.status + "," + response.statusText)
                }
            });
    }
    http_post(url: string, body): Promise<OperationStatus> {
        return this.do_http_post(url, body)
    }
    http_search(url: string, body): Promise<any> {
        return this.do_http_post(url, body)
    }
    http_post_form(url: string, formData): Promise<OperationStatus> {
        let form_options = {
            //mode: 'no-cors',//会导致出现status：0的问题。
            method: 'POST',
            headers: {
                'Accept': 'application/json'
                //不能加ContentType，否则出现错误 Missing boundary in multipart/form-data POST
            },
            //credentials: 'include',
            body: formData
        }
        if (this.token.length > 0) {
            form_options.headers["X-Auth-Token"] = this.token;

        }
        return fetch(url, form_options).then(
            (response: Response) => {
                if (response.ok) {
                    // console.log("HTTP POST SUCCESS:")
                    return response.json()

                } else if (response.status == 403) {
                    Promise.reject("权限不够或登陆超时！")
                } else if (response.type === 'opaque' && response.status == 0) {
                    console.log("文件上传总是0");
                    Promise.resolve()
                    //return response.json()
                } else {
                    Promise.reject("服务器错误：" + response.status + "," + response.statusText)
                }

            });
    }
    private do_http_post(url: string, body): Promise<any> {
        let b;
        if ((typeof body) == "string") {
            b = body;
        } else {
            b = JSON.stringify(body)
        }

        let options: RequestInit = {
            method: 'POST',
            headers: {
                'content-type': 'application/json; charset=utf-8',
                'Accept': 'application/json',
                'X-Requested-With': 'Fetch'
            },
            credentials: 'include',
            body: b
        }
        if (this.token.length > 0) {
            options.headers["X-Auth-Token"] = this.token;

        }
        return fetch(url, options).then(
            (response: Response) => {
                let token = response.headers.get("X-Auth-Token");
                if (token) {
                    console.log("有Token", token);

                    if (token != this.token) {
                        console.log("更新Token");
                        this.token = token;
                    }
                }
                if (response.ok) {

                    return response.json()

                } else if (response.status == 403) {
                    Promise.reject("权限不够或登陆超时！")
                } else {
                    Promise.reject("服务器错误：" + response.status + "," + response.statusText)
                }

            });
    }
}


/**
 * @description: HttpJsonClientWx
 * @param {type} 
 * @return: 
 */
declare var wx;
export class HttpJsonClientWx {
    auth_faild: any;
    token: any;
    static get instance(): HttpJsonClient {
        if (HttpJsonClient._instance == null) {
            HttpJsonClient._instance = new HttpJsonClient();
        }
        return HttpJsonClient._instance;
    }

    wx_http_get(url, data): Promise<any> {
        let resolve = null;
        let reject = null;
        let promise = new Promise((res, rej) => {
            resolve = res;
            reject = rej;
        });
        let self = this;
        let header = {
            'content-type': 'application/json', // 默认值
            'X-Auth-Token': this.token
        }

        wx.request({
            url: url, //仅为示例，并非真实的接口地址
            data: data,
            header: header,
            success(res) {
                //设置token
                if (self.token == null || self.token.length == 0) {
                    self.token = res.header["X-Auth-Token"];
                }

                resolve(res)
                console.log(res.data)
            },
            error(err) {
                reject(err)
            }
        })
        return promise;
    }
    wx_http_post(url, data): Promise<any> {
        console.log("POST...");

        let resolve = null;
        let reject = null;
        let promise = new Promise((res, rej) => {
            resolve = res;
            reject = rej;
        });
        let self = this;
        let header = {
            'content-type': 'application/json', // 默认值
            'X-Auth-Token': this.token
        }

        wx.request({
            url: url, //仅为示例，并非真实的接口地址
            data: data,
            header: header,
            method: "POST",
            success(res) {
                //设置token
                if (self.token == null || self.token.length == 0) {
                    self.token = res.header["X-Auth-Token"];
                }

                resolve(res)
                console.log(res.data)
            },
            error(err) {
                reject(err)
            }
        })
        return promise;
    }

    wx_download(url: string): Promise<any> {

        let resolve = null;
        let reject = null;
        let promise = new Promise((res, rej) => {
            resolve = res;
            reject = rej;
        });
        let header = {
            'X-Auth-Token': this.token
        }
        wx.downloadFile({
            url: url, //仅为示例，并非真实的资源
            header: header,
            success(res) {
                resolve(res)

            },
            fail(err) {
                reject(err)
            }
        })

        return promise;
    }
}

export class OperationStatus {
    ok: boolean;
    msg: string;
    handled: boolean;
    payload: any;
}